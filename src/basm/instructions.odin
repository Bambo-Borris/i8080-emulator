package basm

Mnemonics :: enum {
    NOP,
    MOV,
    MVI,
    LXI,
    LDA,
    STA,
    LHLD,
    SHLD,
    LDAX,
    STAX,
    XCHG,
    ADD,
    ADI,
    ADC,
    ACI,
    SUB,
    SUI,
    SBB,
    SBI,
    INR,
    DCR,
    INX,
    DCX,
    DAD,
    DAA,
    ANA,
    ANI,
    ORA,
    ORI,
    XRA,
    XRI,
    CMP,
    CPI,
    RLC,
    RRC,
    RAL,
    RAR,
    CMA,
    CMC,
    STC,
    JMP,
    JNZ,
    JZ,
    JNC,
    JC,
    JPO,
    JPE,
    JM,
    CALL,
    CNZ,
    CZ,
    CNC,
    CC,
    CPO,
    CPE,
    CP,
    CM,
    RET,
    RNZ,
    RZ,
    RNC,
    RC,
    RPO,
    RPE,
    RP,
    RM,
    RST,
    PCHL,
    PUSH,
    POP,
    XTHL,
    SPHL,
    IN,
    OUT,
    EI,
    DI,
    HLT,
}

Pseudo_Instruction :: enum {
    ORG,
}

MNEMONIC_STRINGS := [?]string {
    "NOP",
    "MOV",
    "MVI",
    "LXI",
    "LDA",
    "STA",
    "LHLD",
    "SHLD",
    "LDAX",
    "STAX",
    "XCHG",
    "ADD",
    "ADI",
    "ADC",
    "ACI",
    "SUB",
    "SUI",
    "SBB",
    "SBI",
    "INR",
    "DCR",
    "INX",
    "DCX",
    "DAD",
    "DAA",
    "ANA",
    "ANI",
    "ORA",
    "ORI",
    "XRA",
    "XRI",
    "CMP",
    "CPI",
    "RLC",
    "RRC",
    "RAL",
    "RAR",
    "CMA",
    "CMC",
    "STC",
    "JMP",
    "JNZ",
    "JZ",
    "JNC",
    "JC",
    "JPO",
    "JPE",
    "JM",
    "CALL",
    "CNZ",
    "CZ",
    "CNC",
    "CC",
    "CPO",
    "CPE",
    "CP",
    "CM",
    "RET",
    "RNZ",
    "RZ",
    "RNC",
    "RC",
    "RPO",
    "RPE",
    "RP",
    "RM",
    "RST",
    "PCHL",
    "PUSH",
    "POP",
    "XTHL",
    "SPHL",
    "IN",
    "OUT",
    "EI",
    "DI",
    "HLT",
}

Registers :: enum {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    SP,
}

Opcode :: struct {
    mnemonic: Mnemonics,
}

OPCODE_TABLE: [255]Opcode

build_opcode_table :: proc() {

}
